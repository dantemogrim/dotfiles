gui:
  scrollHeight: 2
  language: "en"
  # 'rounded' | 'single' | 'double' | 'hidden'
  border: "rounded"
  theme:
    activeBorderColor:
      - "#ffa166"
      - bold
    inactiveBorderColor:
      - magenta
    selectedLineBgColor:
      - black
    optionsTextColor:
      - blue
  returnImmediately: true
  wrapMainPanel: true
  # Side panel width as a ratio of the screen's width.
  sidePanelWidth: 0.333
  # Determines whether we show the bottom line (the one containing keybinding
  # info and the status of the app).
  showBottomLine: true
  # When true, increases vertical space used by focused side panel,
  # creating an accordion effect.
  expandFocusedSidePanel: false
  # Determines which screen mode will be used on startup.
  # 'normal' | 'half' | 'fullscreen'
  screenMode: "normal"
  # Determines the style of the container status and container health display in the
  # containers panel. "long": full words (default), "short": one or two characters,
  # "icon": unicode emoji.
  containerStatusHealthStyle: "icon"
logs:
  timestamps: true
  # Set to '' to show all logs.
  since: "60m"
  # Set to 200 to show last 200 lines of logs.
  tail: ""
commandTemplates:
  # Determines the Docker Compose command to run, referred to as .DockerCompose in commandTemplates.
  dockerCompose: podman compose
  restartService: "{{ .DockerCompose }} restart {{ .Service.Name }}"
  up: "{{ .DockerCompose }} up -d"
  down: "{{ .DockerCompose }} down"
  downWithVolumes: "{{ .DockerCompose }} down --volumes"
  upService: "{{ .DockerCompose }} up -d {{ .Service.Name }}"
  startService: "{{ .DockerCompose }} start {{ .Service.Name }}"
  stopService: "{{ .DockerCompose }} stop {{ .Service.Name }}"
  serviceLogs: "{{ .DockerCompose }} logs --since=60m --follow {{ .Service.Name }}"
  viewServiceLogs: "{{ .DockerCompose }} logs --follow {{ .Service.Name }}"
  rebuildService: "{{ .DockerCompose }} up -d --build {{ .Service.Name }}"
  recreateService: "{{ .DockerCompose }} up -d --force-recreate {{ .Service.Name }}"
  allLogs: "{{ .DockerCompose }} logs --tail=300 --follow"
  viewAlLogs: "{{ .DockerCompose }} logs"
  dockerComposeConfig: "{{ .DockerCompose }} config"
  checkDockerComposeConfig: "{{ .DockerCompose }} config --quiet"
  serviceTop: "{{ .DockerCompose }} top {{ .Service.Name }}"
os:
  openCommand: open {{filename}}
  openLinkCommand: open {{link}}
stats:
  graphs:
    - caption: CPU (%)
      statPath: DerivedStats.CPUPercentage
      color: blue
    - caption: Memory (%)
      statPath: DerivedStats.MemoryPercentage
      color: green
customCommands:
  containers:
    - name: bash
      attach: true
      command: "podman exec -it {{ .Container.ID }} bash"
      serviceNames: []
